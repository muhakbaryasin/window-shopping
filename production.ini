###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:main]
use = egg:window-shopping

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
#pyramid.includes = pyramid_tm

###
# wsgi server configuration
###

[server:main]
use = egg:gunicorn#main
host = 0.0.0.0
port = 1239
#worker_class = aiohttp.worker.AsyncGunicornWorker
worker_class = eventlet
# worker_class = meinheld.gmeinheld.MeinheldWorker
workers = 4


###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, window-shopping

[handlers]
keys = console, filelog

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = filelog

[logger_window-shopping]
level = DEBUG
handlers =
qualname = window-shopping

#[logger_sqlalchemy]
#level = WARN
#handlers =
#qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

[handler_filelog]
# class = handlers.TimedRotatingFileHandler
class = FileHandler
# args = (r'%(here)s/Log/rits.log','midnight', 1, 7)
args = (r'%(here)s/window_shopping/Log/window_shopping.log','a')
level = DEBUG
formatter = generic
